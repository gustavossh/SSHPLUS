#!/bin/bash
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -e /usr/lib/sshplus ]] && rm -rf /bin/menu > /dev/null 2>&1
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "\033[1;37m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;37m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "\033[1;37m["
done
echo -e "\033[1;37m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}

IP=$(cat /etc/IP)
x="ok"

velocity () {
aguarde () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -d /etc/SSHPlus ]] && rm -rf /bin/menu
${comando[0]} > /dev/null 2>&1
${comando[1]} > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "  \033[1;37mAGUARDE \033[1;37m- \033[1;37m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;37m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "  \033[1;37mAGUARDE \033[1;37m- \033[1;37m["
done
echo -e "\033[1;37m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
fun_tst () {
speedtest --share > speed --secure
}
echo -e "\033[0;34m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\033[0;34m┃\E[44;1;37m    TESTANDO A VELOCIDADE DO SERVIDOR    \E[0m\033[0;34m┃"
echo -e "\033[0;34m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
aguarde 'fun_tst'
clear
echo -e "\033[0;34m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\033[0;34m┃\E[44;1;37m    TESTANDO A VELOCIDADE DO SERVIDOR    \E[0m\033[0;34m┃"
echo -e "\033[0;34m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
png=$(cat speed | sed -n '5 p' |awk -F : {'printf $NF'})
down=$(cat speed | sed -n '7 p' |awk -F :  {'print $NF'})
upl=$(cat speed | sed -n '9 p' |awk -F :  {'print $NF'})
lnk=$(cat speed | sed -n '10 p' |awk {'print $NF'})
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;32mPING (LATENCIA):\033[1;37m$png"
echo -e "\033[1;32mDOWNLOAD:\033[1;37m$down"
echo -e "\033[1;32mUPLOAD:\033[1;37m$upl"
echo -e "\033[1;32mLINK: \033[1;36m$lnk"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
rm -rf $HOME/speed
}

installpweb () {
clear
echo -e "\033[38;5;82mINTALANDO PAINEL NITY WEB \033[0m"
sleep 2s
apt install wget -y; bash <(wget -qO- https://www.dropbox.com/s/98afmbyxq4chhe8/nityweb.sh)
}

sincpweb () {
clear
echo -e "\033[38;5;82mSINCRONIZANDO PAINEL NITY WEB \033[0m"
sleep 4s
apt install wget -y; bash <(wget -qO- https://www.dropbox.com/s/x93q20yzvof8tgt/sincpainel.sh)
}

pweb () {
clear
echo -e "\033[1;37mMENU DO PAINEL WEB, USE APENAS DEPOIS DE INSTALAR O PAINEL \033[0m"
sleep 4s
pweb
}

firewall () {
clear
echo -e "\033[1;37mINSTALANDO FIREWALL E ABRINDO PORTAS AZURE/AWS/ORACLE\033[0m"
sleep 5s
sudo apt-get update && sudo apt install firewalld && sudo firewall-cmd --zone=public --permanent --add-port=80/tcp && sudo firewall-cmd --zone=public --permanent --add-port=443/tcp && sudo firewall-cmd --zone=public --permanent --add-port=8080/tcp && sudo firewall-cmd --zone=public --permanent --add-port=7300/udp && sudo firewall-cmd --zone=public --permanent --add-port=5454/tcp && sudo firewall-cmd --zone=public --permanent --add-port=8181/tcp && sudo firewall-cmd --zone=public --permanent --add-port=5000/tcp && sudo firewall-cmd --reload && sudo firewall-cmd --zone=public --list-ports && 
clear &&
echo -e "\033[1;32mSUSSESO\033[0m" &&
echo -e "\033[1;37mPORTAS 80, 443, 8080, 8181, 5000, 5454, 7300 ABERTAS \033[0m"
sleep 5s
}

teste () {
#!/bin/bash
IP=$(cat /etc/IP)
if [ ! -d /etc/SSHPlus/userteste ]; then
mkdir /etc/SSHPlus/userteste
fi
			echo -e "\033[0;34m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
			echo -e "\033[0;34m┃\E[44;1;37m           CRIAR USUARIO TESTE           \E[0m\033[0;34m┃"
			echo -e "\033[0;34m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
[ "$(ls -A /etc/SSHPlus/userteste)" ] && echo -e "\033[1;32mTeste Ativo!\033[1;37m" || echo -e "\033[1;31mNenhum test ativo!\033[0m"
echo ""
for testeson in $(ls /etc/SSHPlus/userteste |sort |sed 's/.sh//g')
do
echo "$testeson"
done
echo ""
echo -ne "\033[1;32mNome do usuario\033[1;37m: "; read nome
if [[ -z $nome ]]
then
echo ""
tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "Nome vazio ou invalido." ; echo "" ; tput sgr0
	exit 1
fi
awk -F : ' { print $1 }' /etc/passwd > /tmp/users 
if grep -Fxq "$nome" /tmp/users
then
	tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "Este usuário já existe." ; echo "" ; tput sgr0
	exit 1
fi
echo -ne "\033[1;32mSenha\033[1;37m: "; read pass
if [[ -z $pass ]]
then
echo ""
tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "Senha vazia ou invalida." ; echo "" ; tput sgr0
	exit 1
fi
echo -ne "\033[1;32mLimite\033[1;37m: "; read limit
if [[ -z $limit ]]
then
echo ""
tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "Limite vazio ou invalido." ; echo "" ; tput sgr0
	exit 1
fi
echo -ne "\033[1;32mMinutos \033[1;33m(\033[1;31mEx: \033[1;37m60\033[1;33m)\033[1;37m: "; read u_temp
if [[ -z $limit ]]
then
echo ""
tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "Limite vazio ou invalido." ; echo "" ; tput sgr0
	exit 1
fi
useradd -M -s /bin/false $nome
(echo $pass;echo $pass) |passwd $nome > /dev/null 2>&1
echo "$pass" > /etc/SSHPlus/senha/$nome
echo "$nome $limit" >> /root/usuarios.db
echo "#!/bin/bash
pkill -f "$nome"
userdel --force $nome
grep -v ^$nome[[:space:]] /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
rm /etc/SSHPlus/senha/$nome > /dev/null 2>&1
rm -rf /etc/SSHPlus/userteste/$nome.sh
exit" > /etc/SSHPlus/userteste/$nome.sh
chmod +x /etc/SSHPlus/userteste/$nome.sh
at -f /etc/SSHPlus/userteste/$nome.sh now + $u_temp min > /dev/null 2>&1
clear
			echo -e "\033[0;34m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
			echo -e "\033[0;34m┃\E[44;1;37m           USUARIO TESTE CRIADO          \E[0m\033[0;34m┃"
			echo -e "\033[0;34m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
echo -e "\033[1;32mIP:\033[1;37m $IP"
echo -e "\033[1;32mUsuario:\033[1;37m $nome"
echo -e "\033[1;32mSenha:\033[1;37m $pass"
echo -e "\033[1;32mLimite:\033[1;37m $limit"
echo -e "\033[1;32mValidade:\033[1;37m $u_temp Minutos"
echo ""
echo -e "\033[1;33mApos o tempo definido o usuario"
echo -e "\033[1;32m$nome \033[1;33msera desconectado e deletado.\033[0m"
sleep 3s
menu

}

fixchk (){
echo "America/Sao_Paulo" > /etc/timezone
ln -fs /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime > /dev/null 2>&1
dpkg-reconfigure --frontend noninteractive tzdata > /dev/null 2>&1
clear
echo -e "\E[44;1;37m    fix checkuser conecta4g     \E[0m" 
echo ""
echo -ne "\n\033[1;32mDe um enter para \033[1;37mcontinuar...\033[1;37m: "; read -r
clear
echo -e "\n\033[1;36mFix checkuser\033[1;37mAGUARDE..."
sleep 0.5
clear
mkdir /etc/rec > /dev/null 2>&1
echo -e 'By: @KIRITO_SSH' > /etc/rec/licence
echo -e 'By: @KIRITO_SSH' > /usr/lib/licence
clear
echo ""
echo -e "\033[1;31m \033[1;37mAtiver o checkuser: \033[1;32m \033[0m"
echo ""
cat /dev/null > ~/.bash_history && history -c
checkrs
}

checkrs () {
while true $x != "ok"
do
clear
echo -e "\033[0;34m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\033[0;34m┃\E[44;1;37m                CHECKUSERS               \E[0m\033[0;34m┃"
echo -e "\033[0;34m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo -e "\033[1;31m  [\033[1;36m 01 \033[1;31m] \033[1;37m• \033[1;33mGL TUNNEL 
\033[1;31m  [\033[1;36m 02 \033[1;31m] \033[1;37m• \033[1;33mCHECKUSER CONECTA 4G
\033[1;31m  [\033[1;36m 03 \033[1;31m] \033[1;37m• \033[1;33mLIBERAR CHECKUSER 
\033[1;31m  [\033[1;36m 00 \033[1;31m] \033[1;37m• \033[1;33mMENU"
echo ""
echo -ne "\033[1;32mOQUE DESEJA FAZER \033[1;37m?\033[1;31m?\033[1;37m : "; read x
case "$x" in 
	1 | 01)
   clear
	gltunnel
	;;
	2 | 02)
	clear
	initcheck
	;;
	3 | 03)
   clear
	fixchk
	;;
   0 | 00)
   menu
   clear
   ;;
   *)
   echo -e "\n\033[1;31mOpcao invalida !\033[0m"
   sleep 2
esac
done
}

uteis() {
while true $x != "ok"
do
clear
echo -e "\033[0;34m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\033[0;34m┃\E[44;1;37m                FERRAMENTAS              \E[0m\033[0;34m┃"
echo -e "\033[0;34m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo -e "\033[1;31m  [\033[1;36m 01 \033[1;31m] \033[1;37m• \033[1;33mINSTALAR PAINEL WEB"
echo -e "\033[1;31m  [\033[1;36m 02 \033[1;31m] \033[1;37m• \033[1;33mSINCRONIZAR PAINEL WEB"
echo -e "\033[1;31m  [\033[1;36m 03 \033[1;31m] \033[1;37m• \033[1;33mACESSAR PAINEL WEB"
echo -e "\033[1;31m  [\033[1;36m 04 \033[1;31m] \033[1;37m• \033[1;33mFIREWALL AWS/AZURE/ORACLE"
echo -e "\033[1;31m  [\033[1;36m 00 \033[1;31m] \033[1;37m• \033[1;33mMENU"
echo ""
echo -ne "\033[1;32mOQUE DESEJA FAZER \033[1;37m?\033[1;31m?\033[1;37m : "; read x
case "$x" in 
	1 | 01)
    clear
	installpweb
    ;;
	2 | 2)
    clear
	sincpweb
    ;;
	3 | 3)
    clear
	pweb
    ;;
	4 | 4)
    clear
	firewall
	;;
	5 | 5)
   clear
	teste
	;;
   0 | 00)
   menu
   clear
   ;;
   *)
   echo -e "\n\033[1;31mOpcao invalida !\033[0m"
   sleep 2
esac
done
}

#limiter
function limit1 () {
   clear
   echo -e "\n\033[1;32mINICIANDO O LIMITER... \033[0m"
   echo ""
   fun_bar 'screen -dmS limiter limiter' 'sleep 3'
   [[ $(grep -wc "limiter" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   } || {
       sed -i '/limiter/d' /etc/autostart
    echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   }
   echo -e "\n\033[1;32m  LIMITER ATIVO !\033[0m"
   sleep 3
   menu
}
function limit2 () {
   clear
   echo -e "\033[1;32mPARANDO O LIMITER... \033[0m"
   echo ""
   fun_stplimiter () {
      sleep 1
      screen -r -S "limiter" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "limiter" /etc/autostart) != '0' ]] && {
          sed -i '/limiter/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stplimiter' 'sleep 3'
   echo -e "\n\033[1;31m LIMITER PARADO !\033[0m"
   sleep 3
   menu
}
function limit_ssh () {
[[ $(ps x | grep "limiter"|grep -v grep |wc -l) = '0' ]] && limit1 || limit2
}

function autoexec () {
   if grep "menu;" /etc/profile > /dev/null; then
      clear
      echo -e "\033[1;32mDESATIVANDO AUTO EXECUÇÃO\033[0m"
      offautmenu () {
         sed -i '/menu;/d' /etc/profile
      }
      echo ""
      fun_bar 'offautmenu'
      echo ""
      echo -e "\033[1;31mAUTO EXECUÇÃO DESATIVADO!\033[0m"
      sleep 1.5s
      menu
   else
      clear
      echo -e "\033[1;32mATIVANDO AUTO EXECUÇÃO\033[0m"
      autmenu () {
         grep -v "^menu;" /etc/profile > /tmp/tmpass && mv /tmp/tmpass /etc/profile
         echo "menu;" >> /etc/profile
      }
      echo ""
      fun_bar 'autmenu'
      echo ""
      echo -e "\033[1;32mAUTO EXECUÇÃO ATIVADO!\033[0m"
      sleep 1.5s
      menu
   fi

}
clear
while true $x != "ok"
do
[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "\033[1;32m✓ ") || stsf=$(echo -e "\033[1;31m✕ ")
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "\033[1;32m✓ " || echo -e "\033[1;31m✕ ")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "\033[1;32m✓ " || echo -e "\033[1;31m✕ ")
[[ ! -e /usr/lib/licence ]] && rm -rf /bin > /dev/null 2>&1
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "\033[1;32m✓ " || echo -e "\033[1;31m✕ ")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "\033[1;32m✓ " || echo -e "\033[1;31m✕ ")
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-5s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-5s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
echo -e "\033[0;34m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\033[0;34m┃\E[46;1;37m                   ⇱ COMPANY SSH ⇲                      \E[0m\033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃\033[1;32mSISTEMA               MEMÓRIA RAM          PROCESSADOR      \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31mOS: \033[1;37m$_system    \033[1;31mTotal:\033[1;37m$_ram     \033[1;31mNucleos: \033[1;37m$_core\033[0m   \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31mHora: \033[1;37m$_hora        \033[1;31mEm uso: \033[1;37m$_usor     \033[1;31mEm uso: \033[1;37m$_usop\033[0m    \033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
[[ ! -e /tmp/att ]]  && {
    echo -e "\033[0;34m┃\033[1;32mONLINES:\033[1;37m $_onlin        \033[1;31mEXPIRADOS: \033[1;37m$_userexp       \033[1;37mTOTAL: \033[1;37m$_tuser\033[0m       \033[0;34m┃"
    var01='\033[1;37m•'
} || {
    echo -e "\033[0;34m┃  \033[1;37m[\033[1;31m!\033[1;37m]  \033[1;32mEXISTE UMA ATUALIZACAO DISPONIVEL  \033[1;37m[\033[1;31m!\033[1;37m]\033[0m      \033[0;34m┃"
    var01="\033[1;32m!"
}
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m01\033[1;31m] \033[1;37m• \033[1;33mCRIAR USUARIO\033[1;31m               [\033[1;36m17\033[1;31m] \033[1;37m• \033[1;33mBAD VPN $stsu        \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m02\033[1;31m] \033[1;37m• \033[1;33mCRIAR TESTE\033[1;31m                 [\033[1;36m18\033[1;31m] \033[1;37m• \033[1;33mBLOCK TORRENT $stsf  \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m03\033[1;31m] \033[1;37m• \033[1;33mREMOVER USUARIO\033[1;31m             [\033[1;36m19\033[1;31m] \033[1;37m• \033[1;33mBOT TELEGRAM $stsbot   \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m04\033[1;31m] \033[1;37m• \033[1;33mMONITOR ONLINE\033[1;31m              [\033[1;36m20\033[1;31m] \033[1;37m• \033[1;33mAUTO EXECUCAO $autm  \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m05\033[1;31m] \033[1;37m• \033[1;33mMUDAR DATA\033[1;31m                  [\033[1;36m21\033[1;31m] \033[1;37m• \033[1;33mLIMITAR SSH $stsl    \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m06\033[1;31m] \033[1;37m• \033[1;33mALTERAR LIMITE\033[1;31m              [\033[1;36m22\033[1;31m] \033[1;37m• \033[1;33mREINICIAR SERVIDOR\033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m07\033[1;31m] \033[1;37m• \033[1;33mMUDAR SENHA\033[1;31m                 [\033[1;36m23\033[1;31m] \033[1;37m• \033[1;33mADICIONAR HOST    \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m08\033[1;31m] \033[1;37m• \033[1;33mREMOVER EXPIRADOS\033[1;31m           [\033[1;36m24\033[1;31m] \033[1;37m• \033[1;33mREMOVER HOST      \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m09\033[1;31m] \033[1;37m• \033[1;33mRELATORIO USUARIOS\033[1;31m          [\033[1;36m25\033[1;31m] \033[1;37m• \033[1;33mMUDAR SENHA ROOT  \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m10\033[1;31m] \033[1;37m• \033[1;33mMODO DE CONEXAO\033[1;31m             [\033[1;36m26\033[1;31m] \033[1;37m• \033[1;33mINFO VPS          \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m11\033[1;31m] \033[1;37m• \033[1;33mSPEEDTEST\033[1;31m                   [\033[1;36m27\033[1;31m] \033[1;37m• \033[1;33mCHECKUSERS        \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m12\033[1;31m] \033[1;37m• \033[1;33mBANNER\033[1;31m                      [\033[1;36m28\033[1;31m] \033[1;37m• \033[1;33mPAINEL WEB       \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m13\033[1;31m] \033[1;37m• \033[1;33mTRAFEGO\033.                     \033[1;37mSEU IP 👉 \033[38;5;82m$IP\033[0;34m ┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m14\033[1;31m] \033[1;37m• \033[1;33mOTIMIZAR                    \033[1;36mTELEGRAM 😎\033  \033[1;37m@companyoficial  \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m15\033[1;31m] \033[1;37m• \033[1;33mBACKUP\033[1;31m                      [\033[1;36mAT\033[1;31m] $var01 \033[1;32mATUALIZAR SCRIPT  \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;31m[\033[1;36m16\033[1;31m] \033[1;37m• \033[1;33mCONSUMO\033[1;31m                     {\033[1;36mRE\033[1;31m} \033[1;37m• \033[1;31mREMOVER SCRIPT    \033[0;34m┃"
echo -e "\033[0;34m╰┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo -ne "\033[0;34m ╰╼\033[1;37m  [\033[1;36m00\033[1;37m]\033[1;31m SAIR\033[1;36m {INFORME UMA OPÇÃO} \033[1;37m:"; read x
case "$x" in 
   1 | 01)
   clear
   criarusuario
   echo -ne "\n\033[1;31mENTER \033[1;37mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   2 | 02)
   clear
   criarteste
   echo -ne "\n\033[1;31mENTER \033[1;37mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   3 | 03)
   clear
   remover
   sleep 3
   ;;
   4 | 04)
   clear
   sshmonitor
   echo -ne "\n\033[1;31mENTER \033[1;37mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;      
   5 | 05)
   clear
   mudardata
   sleep 3
   ;;
   6 | 06)
   clear
   alterarlimite
   sleep 3
   ;; 
   7 | 07)
   clear
   alterarsenha
   sleep 3
   ;;
   8 | 08)
   clear
   expcleaner
   echo ""
   sleep 3
   ;;     
   9 | 09)
   clear
   infousers
   echo -ne "\n\033[1;31mENTER \033[1;37mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   10)
   conexao
   exit;
   ;;
   11)
   clear
   velocity
   echo -ne "\n\033[1;31mENTER \033[1;37mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   12)
   clear
   banner
   sleep 3
   ;;
   13)
   clear
   echo -e "\033[1;32mPARA SAIR CLICK CTRL + C\033[1;36m"
   sleep 4
   nload
   ;;
   14)
   clear
   otimizar
   echo -ne "\n\033[1;31mENTER \033[1;37mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   15)
   userbackup
   echo -ne "\n\033[1;31mENTER \033[1;37mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   16)
   htop
   ;;
   17)
   clear
   badvpn
   exit;
   ;;
   18)
   blockt
   ;;
   19)
   botssh
   ;;
   20)
   autoexec
   ;;
   21)
   clear
   limit_ssh
   ;;
   22)
   clear
   reiniciarsistema
   sleep 3
   ;;
   23)
   clear
   addhost
   echo -ne "\n\033[1;31mENTER \033[1;37mpara retornar ao \033[1;32mMENU!\033[0m"; read
   menu
   ;;
   24)
   clear
   delhost
   echo -ne "\n\033[1;31mENTER \033[1;37mpara retornar ao \033[1;32mMENU!\033[0m"; read
   menu
   ;;
   25)
   clear
   senharoot
   sleep 3
   ;;
   26)
   clear
   detalhes
   echo -ne "\n\033[1;31mENTER \033[1;37mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   27)
   clear
   checkrs
   sleep 0.5
   ;;
   28)
   clear
   uteis
   sleep 0.5
   ;;
   at | AT)
   attscript
   ;;
   re | RE)
   clear
   delscript
   ;;
   v2 | V2)
   v2raymanager
   exit
   ;;   
   30)
   menu
   ;;
   0 | 00)
   echo -e "\033[1;31mSaindo...\033[0m"
   sleep 2
   clear
   exit;
   ;;
   *)
   echo -e "\n\033[1;31mOpcao invalida !\033[0m"
   sleep 2
esac
done
menu
#fim
